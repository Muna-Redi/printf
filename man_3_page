
.\" Manpage for _printf().
.TH man 3 "17 March 2020" "1.0" "_printf man page"
.SH NAME
printf()
.SH SYNOPSIS
#include "main.h"

Use the function with the specifiers (c,s,i,d, etc) after the %. If no identifier is present then the function prints the literalu string.
.SH DESCRIPTION
The functions _printf()  produce output according to a
format specified. write the output under the control of a format
string that specifies how subsequent arguments (or arguments accessed
via the variable-length argument facilities.
Format of the format string
The format string is a character string, beginning and ending in its
initial shift state, if any.  The format string is composed of zero
or more directives: ordinary characters (not %), which are copied
unchanged to the output stream; and conversion specifications, each
of which results in fetching zero or more subsequent arguments.  Each
conversion specification is introduced by the character %, and ends
with a conversion specifier.  In between there may be (in this order)
zero or more flags, an optional minimum field width, an optional
precision and an optional length modifier.
Conversion specifiers
A character that specifies the type of conversion to be applied.  The
conversion specifiers and their meanings are:
.TP
.BR c
The int argument is converted to an unsigned char, then the resulting character is written
.TP
.B s
The const char * argument is expected to be a pointer to an array of character type (pointer to a string). Characters from the array are written up to a terminating null byte, but do ot include the terminating null byte.
       d, i   The int argument is converted to signed decimal notation.  The
              precision, if any, gives the minimum number of digits that
              must appear; if the converted value requires fewer digits, it
              is padded on the left with zeros.  The default precision is 1.
              When 0 is printed with an explicit precision 0, the output is
              empty.

       o, u, x, X
              The unsigned int argument is converted to unsigned octal (o),
              unsigned decimal (u), or unsigned hexadecimal (x and X) nota‐
              tion.  The letters abcdef are used for x conversions; the let‐
              ters ABCDEF are used for X conversions.  The precision, if
              any, gives the minimum number of digits that must appear; if
              the converted value requires fewer digits, it is padded on the
              left with zeros.  The default precision is 1.  When 0 is
              printed with an explicit precision 0, the output is empty.
.SH EXAMPLE
#include "holberton.h"
	 _printf("hello, %s", "people")
	 output: hello, people
.SH RETURN VALUE
Upon successful return, these functions return the number of
characters printed (excluding the null byte used to end output to
strings).
If an output error is encountered, a negative value is returned.
.SH SEE ALSO
printf(3).
.SH BUGS
No known bugs.
.SH AUTHOR
Muna-Redi, Bucha1958.
